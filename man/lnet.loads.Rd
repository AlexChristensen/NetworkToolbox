% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lnet.loads.R
\name{lnet.loads}
\alias{lnet.loads}
\title{Latent Network Loadings}
\usage{
lnet.loads(A, comm, absolute = TRUE, rm.zero = FALSE)
}
\arguments{
\item{A}{An adjacency matrix of network data}

\item{comm}{A vector of community assignments}

\item{absolute}{Should network use absolute weights?
Defaults to \code{TRUE}.
Set to \code{FALSE} for signed weights}

\item{rm.zero}{Should zeros be removed from the resulting matrix?
Defaults to \code{FALSE}.
Set to \code{TRUE} to reduce the noise in the results}
}
\value{
Returns a matrix of the unstandardized within- and between-community
strength values for each node
}
\description{
Computes the within- and between-community
\code{\link[NetworkToolbox]{strength}} of each item
for each community
}
\details{
Simulation studies have demonstrated that a node's strength
centrality is roughly equivalent to factor loadings
(Christensen, Golino, & Silvia, 2019; Hallquist, Wright, & Molenaar, 2019).
Hallquist and colleagues (2019) found that node strength represented a
combination of dominant and cross-factor loadings. This function computes
each node's strength within each specified dimension, providing a rough
equivalent to factor loadings (including cross-loadings).
}
\examples{
A <- TMFG(neoOpen)$A

wc <- louvain(A)$community

str.dim <- lnet.loads(A, wc, rm.zero = TRUE)

}
\author{
Alexander P. Christensen <alexpaulchristensen@gmail.com> and Hudson F. Golino <hfg9s at virginia.edu>
}
